import { __assign, __awaiter, __generator, __read } from "tslib";
import { HttpRequest as __HttpRequest } from "@aws-sdk/protocol-http";
import { decorateServiceException as __decorateServiceException, expectBoolean as __expectBoolean, expectInt32 as __expectInt32, expectLong as __expectLong, expectNonNull as __expectNonNull, expectNumber as __expectNumber, expectString as __expectString, parseEpochTimestamp as __parseEpochTimestamp, throwDefaultError, } from "@aws-sdk/smithy-client";
import { v4 as generateIdempotencyToken } from "uuid";
import { AthenaServiceException as __BaseException } from "../models/AthenaServiceException";
import { InternalServerException, InvalidRequestException, MetadataException, ResourceNotFoundException, TooManyRequestsException, } from "../models/models_0";
export var serializeAws_json1_1BatchGetNamedQueryCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.BatchGetNamedQuery",
        };
        body = JSON.stringify(serializeAws_json1_1BatchGetNamedQueryInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1BatchGetPreparedStatementCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.BatchGetPreparedStatement",
        };
        body = JSON.stringify(serializeAws_json1_1BatchGetPreparedStatementInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1BatchGetQueryExecutionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.BatchGetQueryExecution",
        };
        body = JSON.stringify(serializeAws_json1_1BatchGetQueryExecutionInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1CreateDataCatalogCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.CreateDataCatalog",
        };
        body = JSON.stringify(serializeAws_json1_1CreateDataCatalogInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1CreateNamedQueryCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.CreateNamedQuery",
        };
        body = JSON.stringify(serializeAws_json1_1CreateNamedQueryInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1CreatePreparedStatementCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.CreatePreparedStatement",
        };
        body = JSON.stringify(serializeAws_json1_1CreatePreparedStatementInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1CreateWorkGroupCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.CreateWorkGroup",
        };
        body = JSON.stringify(serializeAws_json1_1CreateWorkGroupInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1DeleteDataCatalogCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.DeleteDataCatalog",
        };
        body = JSON.stringify(serializeAws_json1_1DeleteDataCatalogInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1DeleteNamedQueryCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.DeleteNamedQuery",
        };
        body = JSON.stringify(serializeAws_json1_1DeleteNamedQueryInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1DeletePreparedStatementCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.DeletePreparedStatement",
        };
        body = JSON.stringify(serializeAws_json1_1DeletePreparedStatementInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1DeleteWorkGroupCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.DeleteWorkGroup",
        };
        body = JSON.stringify(serializeAws_json1_1DeleteWorkGroupInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1GetDatabaseCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.GetDatabase",
        };
        body = JSON.stringify(serializeAws_json1_1GetDatabaseInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1GetDataCatalogCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.GetDataCatalog",
        };
        body = JSON.stringify(serializeAws_json1_1GetDataCatalogInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1GetNamedQueryCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.GetNamedQuery",
        };
        body = JSON.stringify(serializeAws_json1_1GetNamedQueryInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1GetPreparedStatementCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.GetPreparedStatement",
        };
        body = JSON.stringify(serializeAws_json1_1GetPreparedStatementInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1GetQueryExecutionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.GetQueryExecution",
        };
        body = JSON.stringify(serializeAws_json1_1GetQueryExecutionInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1GetQueryResultsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.GetQueryResults",
        };
        body = JSON.stringify(serializeAws_json1_1GetQueryResultsInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1GetQueryRuntimeStatisticsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.GetQueryRuntimeStatistics",
        };
        body = JSON.stringify(serializeAws_json1_1GetQueryRuntimeStatisticsInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1GetTableMetadataCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.GetTableMetadata",
        };
        body = JSON.stringify(serializeAws_json1_1GetTableMetadataInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1GetWorkGroupCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.GetWorkGroup",
        };
        body = JSON.stringify(serializeAws_json1_1GetWorkGroupInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1ListDatabasesCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.ListDatabases",
        };
        body = JSON.stringify(serializeAws_json1_1ListDatabasesInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1ListDataCatalogsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.ListDataCatalogs",
        };
        body = JSON.stringify(serializeAws_json1_1ListDataCatalogsInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1ListEngineVersionsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.ListEngineVersions",
        };
        body = JSON.stringify(serializeAws_json1_1ListEngineVersionsInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1ListNamedQueriesCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.ListNamedQueries",
        };
        body = JSON.stringify(serializeAws_json1_1ListNamedQueriesInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1ListPreparedStatementsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.ListPreparedStatements",
        };
        body = JSON.stringify(serializeAws_json1_1ListPreparedStatementsInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1ListQueryExecutionsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.ListQueryExecutions",
        };
        body = JSON.stringify(serializeAws_json1_1ListQueryExecutionsInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1ListTableMetadataCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.ListTableMetadata",
        };
        body = JSON.stringify(serializeAws_json1_1ListTableMetadataInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1ListTagsForResourceCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.ListTagsForResource",
        };
        body = JSON.stringify(serializeAws_json1_1ListTagsForResourceInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1ListWorkGroupsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.ListWorkGroups",
        };
        body = JSON.stringify(serializeAws_json1_1ListWorkGroupsInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1StartQueryExecutionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.StartQueryExecution",
        };
        body = JSON.stringify(serializeAws_json1_1StartQueryExecutionInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1StopQueryExecutionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.StopQueryExecution",
        };
        body = JSON.stringify(serializeAws_json1_1StopQueryExecutionInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1TagResourceCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.TagResource",
        };
        body = JSON.stringify(serializeAws_json1_1TagResourceInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1UntagResourceCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.UntagResource",
        };
        body = JSON.stringify(serializeAws_json1_1UntagResourceInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1UpdateDataCatalogCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.UpdateDataCatalog",
        };
        body = JSON.stringify(serializeAws_json1_1UpdateDataCatalogInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1UpdateNamedQueryCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.UpdateNamedQuery",
        };
        body = JSON.stringify(serializeAws_json1_1UpdateNamedQueryInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1UpdatePreparedStatementCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.UpdatePreparedStatement",
        };
        body = JSON.stringify(serializeAws_json1_1UpdatePreparedStatementInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1UpdateWorkGroupCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AmazonAthena.UpdateWorkGroup",
        };
        body = JSON.stringify(serializeAws_json1_1UpdateWorkGroupInput(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var deserializeAws_json1_1BatchGetNamedQueryCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1BatchGetNamedQueryCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1BatchGetNamedQueryOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1BatchGetNamedQueryCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
export var deserializeAws_json1_1BatchGetPreparedStatementCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1BatchGetPreparedStatementCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1BatchGetPreparedStatementOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1BatchGetPreparedStatementCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
export var deserializeAws_json1_1BatchGetQueryExecutionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1BatchGetQueryExecutionCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1BatchGetQueryExecutionOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1BatchGetQueryExecutionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
export var deserializeAws_json1_1CreateDataCatalogCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1CreateDataCatalogCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1CreateDataCatalogOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1CreateDataCatalogCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
export var deserializeAws_json1_1CreateNamedQueryCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1CreateNamedQueryCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1CreateNamedQueryOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1CreateNamedQueryCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
export var deserializeAws_json1_1CreatePreparedStatementCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1CreatePreparedStatementCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1CreatePreparedStatementOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1CreatePreparedStatementCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
export var deserializeAws_json1_1CreateWorkGroupCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1CreateWorkGroupCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1CreateWorkGroupOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1CreateWorkGroupCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
export var deserializeAws_json1_1DeleteDataCatalogCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1DeleteDataCatalogCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1DeleteDataCatalogOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1DeleteDataCatalogCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
export var deserializeAws_json1_1DeleteNamedQueryCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1DeleteNamedQueryCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1DeleteNamedQueryOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1DeleteNamedQueryCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
export var deserializeAws_json1_1DeletePreparedStatementCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1DeletePreparedStatementCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1DeletePreparedStatementOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1DeletePreparedStatementCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                    case "ResourceNotFoundException": return [3, 6];
                    case "com.amazonaws.athena#ResourceNotFoundException": return [3, 6];
                }
                return [3, 8];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 9;
            case 9: return [2];
        }
    });
}); };
export var deserializeAws_json1_1DeleteWorkGroupCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1DeleteWorkGroupCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1DeleteWorkGroupOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1DeleteWorkGroupCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
export var deserializeAws_json1_1GetDatabaseCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1GetDatabaseCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1GetDatabaseOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1GetDatabaseCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                    case "MetadataException": return [3, 6];
                    case "com.amazonaws.athena#MetadataException": return [3, 6];
                }
                return [3, 8];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1MetadataExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 9;
            case 9: return [2];
        }
    });
}); };
export var deserializeAws_json1_1GetDataCatalogCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1GetDataCatalogCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1GetDataCatalogOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1GetDataCatalogCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
export var deserializeAws_json1_1GetNamedQueryCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1GetNamedQueryCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1GetNamedQueryOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1GetNamedQueryCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
export var deserializeAws_json1_1GetPreparedStatementCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1GetPreparedStatementCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1GetPreparedStatementOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1GetPreparedStatementCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                    case "ResourceNotFoundException": return [3, 6];
                    case "com.amazonaws.athena#ResourceNotFoundException": return [3, 6];
                }
                return [3, 8];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 9;
            case 9: return [2];
        }
    });
}); };
export var deserializeAws_json1_1GetQueryExecutionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1GetQueryExecutionCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1GetQueryExecutionOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1GetQueryExecutionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
export var deserializeAws_json1_1GetQueryResultsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1GetQueryResultsCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1GetQueryResultsOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1GetQueryResultsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
export var deserializeAws_json1_1GetQueryRuntimeStatisticsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1GetQueryRuntimeStatisticsCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1GetQueryRuntimeStatisticsOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1GetQueryRuntimeStatisticsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
export var deserializeAws_json1_1GetTableMetadataCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1GetTableMetadataCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1GetTableMetadataOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1GetTableMetadataCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                    case "MetadataException": return [3, 6];
                    case "com.amazonaws.athena#MetadataException": return [3, 6];
                }
                return [3, 8];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1MetadataExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 9;
            case 9: return [2];
        }
    });
}); };
export var deserializeAws_json1_1GetWorkGroupCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1GetWorkGroupCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1GetWorkGroupOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1GetWorkGroupCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
export var deserializeAws_json1_1ListDatabasesCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1ListDatabasesCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1ListDatabasesOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1ListDatabasesCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                    case "MetadataException": return [3, 6];
                    case "com.amazonaws.athena#MetadataException": return [3, 6];
                }
                return [3, 8];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1MetadataExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 9;
            case 9: return [2];
        }
    });
}); };
export var deserializeAws_json1_1ListDataCatalogsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1ListDataCatalogsCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1ListDataCatalogsOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1ListDataCatalogsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
export var deserializeAws_json1_1ListEngineVersionsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1ListEngineVersionsCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1ListEngineVersionsOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1ListEngineVersionsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
export var deserializeAws_json1_1ListNamedQueriesCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1ListNamedQueriesCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1ListNamedQueriesOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1ListNamedQueriesCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
export var deserializeAws_json1_1ListPreparedStatementsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1ListPreparedStatementsCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1ListPreparedStatementsOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1ListPreparedStatementsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
export var deserializeAws_json1_1ListQueryExecutionsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1ListQueryExecutionsCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1ListQueryExecutionsOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1ListQueryExecutionsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
export var deserializeAws_json1_1ListTableMetadataCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1ListTableMetadataCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1ListTableMetadataOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1ListTableMetadataCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                    case "MetadataException": return [3, 6];
                    case "com.amazonaws.athena#MetadataException": return [3, 6];
                }
                return [3, 8];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1MetadataExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 9;
            case 9: return [2];
        }
    });
}); };
export var deserializeAws_json1_1ListTagsForResourceCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1ListTagsForResourceCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1ListTagsForResourceOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1ListTagsForResourceCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                    case "ResourceNotFoundException": return [3, 6];
                    case "com.amazonaws.athena#ResourceNotFoundException": return [3, 6];
                }
                return [3, 8];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 9;
            case 9: return [2];
        }
    });
}); };
export var deserializeAws_json1_1ListWorkGroupsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1ListWorkGroupsCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1ListWorkGroupsOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1ListWorkGroupsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
export var deserializeAws_json1_1StartQueryExecutionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1StartQueryExecutionCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1StartQueryExecutionOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1StartQueryExecutionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                    case "TooManyRequestsException": return [3, 6];
                    case "com.amazonaws.athena#TooManyRequestsException": return [3, 6];
                }
                return [3, 8];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 9;
            case 9: return [2];
        }
    });
}); };
export var deserializeAws_json1_1StopQueryExecutionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1StopQueryExecutionCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1StopQueryExecutionOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1StopQueryExecutionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
export var deserializeAws_json1_1TagResourceCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1TagResourceCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1TagResourceOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1TagResourceCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                    case "ResourceNotFoundException": return [3, 6];
                    case "com.amazonaws.athena#ResourceNotFoundException": return [3, 6];
                }
                return [3, 8];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 9;
            case 9: return [2];
        }
    });
}); };
export var deserializeAws_json1_1UntagResourceCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1UntagResourceCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1UntagResourceOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1UntagResourceCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                    case "ResourceNotFoundException": return [3, 6];
                    case "com.amazonaws.athena#ResourceNotFoundException": return [3, 6];
                }
                return [3, 8];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 9;
            case 9: return [2];
        }
    });
}); };
export var deserializeAws_json1_1UpdateDataCatalogCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1UpdateDataCatalogCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1UpdateDataCatalogOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1UpdateDataCatalogCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
export var deserializeAws_json1_1UpdateNamedQueryCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1UpdateNamedQueryCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1UpdateNamedQueryOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1UpdateNamedQueryCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
export var deserializeAws_json1_1UpdatePreparedStatementCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1UpdatePreparedStatementCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1UpdatePreparedStatementOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1UpdatePreparedStatementCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                    case "ResourceNotFoundException": return [3, 6];
                    case "com.amazonaws.athena#ResourceNotFoundException": return [3, 6];
                }
                return [3, 8];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 9;
            case 9: return [2];
        }
    });
}); };
export var deserializeAws_json1_1UpdateWorkGroupCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1UpdateWorkGroupCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1UpdateWorkGroupOutput(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1UpdateWorkGroupCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalServerException": return [3, 2];
                    case "com.amazonaws.athena#InternalServerException": return [3, 2];
                    case "InvalidRequestException": return [3, 4];
                    case "com.amazonaws.athena#InvalidRequestException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 7;
            case 7: return [2];
        }
    });
}); };
var deserializeAws_json1_1InternalServerExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1InternalServerException(body, context);
        exception = new InternalServerException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1InvalidRequestExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1InvalidRequestException(body, context);
        exception = new InvalidRequestException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1MetadataExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1MetadataException(body, context);
        exception = new MetadataException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1ResourceNotFoundExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1ResourceNotFoundException(body, context);
        exception = new ResourceNotFoundException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1TooManyRequestsExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1TooManyRequestsException(body, context);
        exception = new TooManyRequestsException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var serializeAws_json1_1AclConfiguration = function (input, context) {
    return __assign({}, (input.S3AclOption != null && { S3AclOption: input.S3AclOption }));
};
var serializeAws_json1_1BatchGetNamedQueryInput = function (input, context) {
    return __assign({}, (input.NamedQueryIds != null && {
        NamedQueryIds: serializeAws_json1_1NamedQueryIdList(input.NamedQueryIds, context),
    }));
};
var serializeAws_json1_1BatchGetPreparedStatementInput = function (input, context) {
    return __assign(__assign({}, (input.PreparedStatementNames != null && {
        PreparedStatementNames: serializeAws_json1_1PreparedStatementNameList(input.PreparedStatementNames, context),
    })), (input.WorkGroup != null && { WorkGroup: input.WorkGroup }));
};
var serializeAws_json1_1BatchGetQueryExecutionInput = function (input, context) {
    return __assign({}, (input.QueryExecutionIds != null && {
        QueryExecutionIds: serializeAws_json1_1QueryExecutionIdList(input.QueryExecutionIds, context),
    }));
};
var serializeAws_json1_1CreateDataCatalogInput = function (input, context) {
    return __assign(__assign(__assign(__assign(__assign({}, (input.Description != null && { Description: input.Description })), (input.Name != null && { Name: input.Name })), (input.Parameters != null && { Parameters: serializeAws_json1_1ParametersMap(input.Parameters, context) })), (input.Tags != null && { Tags: serializeAws_json1_1TagList(input.Tags, context) })), (input.Type != null && { Type: input.Type }));
};
var serializeAws_json1_1CreateNamedQueryInput = function (input, context) {
    var _a;
    return __assign(__assign(__assign(__assign(__assign({ ClientRequestToken: (_a = input.ClientRequestToken) !== null && _a !== void 0 ? _a : generateIdempotencyToken() }, (input.Database != null && { Database: input.Database })), (input.Description != null && { Description: input.Description })), (input.Name != null && { Name: input.Name })), (input.QueryString != null && { QueryString: input.QueryString })), (input.WorkGroup != null && { WorkGroup: input.WorkGroup }));
};
var serializeAws_json1_1CreatePreparedStatementInput = function (input, context) {
    return __assign(__assign(__assign(__assign({}, (input.Description != null && { Description: input.Description })), (input.QueryStatement != null && { QueryStatement: input.QueryStatement })), (input.StatementName != null && { StatementName: input.StatementName })), (input.WorkGroup != null && { WorkGroup: input.WorkGroup }));
};
var serializeAws_json1_1CreateWorkGroupInput = function (input, context) {
    return __assign(__assign(__assign(__assign({}, (input.Configuration != null && {
        Configuration: serializeAws_json1_1WorkGroupConfiguration(input.Configuration, context),
    })), (input.Description != null && { Description: input.Description })), (input.Name != null && { Name: input.Name })), (input.Tags != null && { Tags: serializeAws_json1_1TagList(input.Tags, context) }));
};
var serializeAws_json1_1DeleteDataCatalogInput = function (input, context) {
    return __assign({}, (input.Name != null && { Name: input.Name }));
};
var serializeAws_json1_1DeleteNamedQueryInput = function (input, context) {
    var _a;
    return {
        NamedQueryId: (_a = input.NamedQueryId) !== null && _a !== void 0 ? _a : generateIdempotencyToken(),
    };
};
var serializeAws_json1_1DeletePreparedStatementInput = function (input, context) {
    return __assign(__assign({}, (input.StatementName != null && { StatementName: input.StatementName })), (input.WorkGroup != null && { WorkGroup: input.WorkGroup }));
};
var serializeAws_json1_1DeleteWorkGroupInput = function (input, context) {
    return __assign(__assign({}, (input.RecursiveDeleteOption != null && { RecursiveDeleteOption: input.RecursiveDeleteOption })), (input.WorkGroup != null && { WorkGroup: input.WorkGroup }));
};
var serializeAws_json1_1EncryptionConfiguration = function (input, context) {
    return __assign(__assign({}, (input.EncryptionOption != null && { EncryptionOption: input.EncryptionOption })), (input.KmsKey != null && { KmsKey: input.KmsKey }));
};
var serializeAws_json1_1EngineVersion = function (input, context) {
    return __assign(__assign({}, (input.EffectiveEngineVersion != null && { EffectiveEngineVersion: input.EffectiveEngineVersion })), (input.SelectedEngineVersion != null && { SelectedEngineVersion: input.SelectedEngineVersion }));
};
var serializeAws_json1_1ExecutionParameters = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        return entry;
    });
};
var serializeAws_json1_1GetDatabaseInput = function (input, context) {
    return __assign(__assign({}, (input.CatalogName != null && { CatalogName: input.CatalogName })), (input.DatabaseName != null && { DatabaseName: input.DatabaseName }));
};
var serializeAws_json1_1GetDataCatalogInput = function (input, context) {
    return __assign({}, (input.Name != null && { Name: input.Name }));
};
var serializeAws_json1_1GetNamedQueryInput = function (input, context) {
    return __assign({}, (input.NamedQueryId != null && { NamedQueryId: input.NamedQueryId }));
};
var serializeAws_json1_1GetPreparedStatementInput = function (input, context) {
    return __assign(__assign({}, (input.StatementName != null && { StatementName: input.StatementName })), (input.WorkGroup != null && { WorkGroup: input.WorkGroup }));
};
var serializeAws_json1_1GetQueryExecutionInput = function (input, context) {
    return __assign({}, (input.QueryExecutionId != null && { QueryExecutionId: input.QueryExecutionId }));
};
var serializeAws_json1_1GetQueryResultsInput = function (input, context) {
    return __assign(__assign(__assign({}, (input.MaxResults != null && { MaxResults: input.MaxResults })), (input.NextToken != null && { NextToken: input.NextToken })), (input.QueryExecutionId != null && { QueryExecutionId: input.QueryExecutionId }));
};
var serializeAws_json1_1GetQueryRuntimeStatisticsInput = function (input, context) {
    return __assign({}, (input.QueryExecutionId != null && { QueryExecutionId: input.QueryExecutionId }));
};
var serializeAws_json1_1GetTableMetadataInput = function (input, context) {
    return __assign(__assign(__assign({}, (input.CatalogName != null && { CatalogName: input.CatalogName })), (input.DatabaseName != null && { DatabaseName: input.DatabaseName })), (input.TableName != null && { TableName: input.TableName }));
};
var serializeAws_json1_1GetWorkGroupInput = function (input, context) {
    return __assign({}, (input.WorkGroup != null && { WorkGroup: input.WorkGroup }));
};
var serializeAws_json1_1ListDatabasesInput = function (input, context) {
    return __assign(__assign(__assign({}, (input.CatalogName != null && { CatalogName: input.CatalogName })), (input.MaxResults != null && { MaxResults: input.MaxResults })), (input.NextToken != null && { NextToken: input.NextToken }));
};
var serializeAws_json1_1ListDataCatalogsInput = function (input, context) {
    return __assign(__assign({}, (input.MaxResults != null && { MaxResults: input.MaxResults })), (input.NextToken != null && { NextToken: input.NextToken }));
};
var serializeAws_json1_1ListEngineVersionsInput = function (input, context) {
    return __assign(__assign({}, (input.MaxResults != null && { MaxResults: input.MaxResults })), (input.NextToken != null && { NextToken: input.NextToken }));
};
var serializeAws_json1_1ListNamedQueriesInput = function (input, context) {
    return __assign(__assign(__assign({}, (input.MaxResults != null && { MaxResults: input.MaxResults })), (input.NextToken != null && { NextToken: input.NextToken })), (input.WorkGroup != null && { WorkGroup: input.WorkGroup }));
};
var serializeAws_json1_1ListPreparedStatementsInput = function (input, context) {
    return __assign(__assign(__assign({}, (input.MaxResults != null && { MaxResults: input.MaxResults })), (input.NextToken != null && { NextToken: input.NextToken })), (input.WorkGroup != null && { WorkGroup: input.WorkGroup }));
};
var serializeAws_json1_1ListQueryExecutionsInput = function (input, context) {
    return __assign(__assign(__assign({}, (input.MaxResults != null && { MaxResults: input.MaxResults })), (input.NextToken != null && { NextToken: input.NextToken })), (input.WorkGroup != null && { WorkGroup: input.WorkGroup }));
};
var serializeAws_json1_1ListTableMetadataInput = function (input, context) {
    return __assign(__assign(__assign(__assign(__assign({}, (input.CatalogName != null && { CatalogName: input.CatalogName })), (input.DatabaseName != null && { DatabaseName: input.DatabaseName })), (input.Expression != null && { Expression: input.Expression })), (input.MaxResults != null && { MaxResults: input.MaxResults })), (input.NextToken != null && { NextToken: input.NextToken }));
};
var serializeAws_json1_1ListTagsForResourceInput = function (input, context) {
    return __assign(__assign(__assign({}, (input.MaxResults != null && { MaxResults: input.MaxResults })), (input.NextToken != null && { NextToken: input.NextToken })), (input.ResourceARN != null && { ResourceARN: input.ResourceARN }));
};
var serializeAws_json1_1ListWorkGroupsInput = function (input, context) {
    return __assign(__assign({}, (input.MaxResults != null && { MaxResults: input.MaxResults })), (input.NextToken != null && { NextToken: input.NextToken }));
};
var serializeAws_json1_1NamedQueryIdList = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        return entry;
    });
};
var serializeAws_json1_1ParametersMap = function (input, context) {
    return Object.entries(input).reduce(function (acc, _a) {
        var _b;
        var _c = __read(_a, 2), key = _c[0], value = _c[1];
        if (value === null) {
            return acc;
        }
        return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));
    }, {});
};
var serializeAws_json1_1PreparedStatementNameList = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        return entry;
    });
};
var serializeAws_json1_1QueryExecutionContext = function (input, context) {
    return __assign(__assign({}, (input.Catalog != null && { Catalog: input.Catalog })), (input.Database != null && { Database: input.Database }));
};
var serializeAws_json1_1QueryExecutionIdList = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        return entry;
    });
};
var serializeAws_json1_1ResultConfiguration = function (input, context) {
    return __assign(__assign(__assign(__assign({}, (input.AclConfiguration != null && {
        AclConfiguration: serializeAws_json1_1AclConfiguration(input.AclConfiguration, context),
    })), (input.EncryptionConfiguration != null && {
        EncryptionConfiguration: serializeAws_json1_1EncryptionConfiguration(input.EncryptionConfiguration, context),
    })), (input.ExpectedBucketOwner != null && { ExpectedBucketOwner: input.ExpectedBucketOwner })), (input.OutputLocation != null && { OutputLocation: input.OutputLocation }));
};
var serializeAws_json1_1ResultConfigurationUpdates = function (input, context) {
    return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (input.AclConfiguration != null && {
        AclConfiguration: serializeAws_json1_1AclConfiguration(input.AclConfiguration, context),
    })), (input.EncryptionConfiguration != null && {
        EncryptionConfiguration: serializeAws_json1_1EncryptionConfiguration(input.EncryptionConfiguration, context),
    })), (input.ExpectedBucketOwner != null && { ExpectedBucketOwner: input.ExpectedBucketOwner })), (input.OutputLocation != null && { OutputLocation: input.OutputLocation })), (input.RemoveAclConfiguration != null && { RemoveAclConfiguration: input.RemoveAclConfiguration })), (input.RemoveEncryptionConfiguration != null && {
        RemoveEncryptionConfiguration: input.RemoveEncryptionConfiguration,
    })), (input.RemoveExpectedBucketOwner != null && { RemoveExpectedBucketOwner: input.RemoveExpectedBucketOwner })), (input.RemoveOutputLocation != null && { RemoveOutputLocation: input.RemoveOutputLocation }));
};
var serializeAws_json1_1StartQueryExecutionInput = function (input, context) {
    var _a;
    return __assign(__assign(__assign(__assign(__assign({ ClientRequestToken: (_a = input.ClientRequestToken) !== null && _a !== void 0 ? _a : generateIdempotencyToken() }, (input.ExecutionParameters != null && {
        ExecutionParameters: serializeAws_json1_1ExecutionParameters(input.ExecutionParameters, context),
    })), (input.QueryExecutionContext != null && {
        QueryExecutionContext: serializeAws_json1_1QueryExecutionContext(input.QueryExecutionContext, context),
    })), (input.QueryString != null && { QueryString: input.QueryString })), (input.ResultConfiguration != null && {
        ResultConfiguration: serializeAws_json1_1ResultConfiguration(input.ResultConfiguration, context),
    })), (input.WorkGroup != null && { WorkGroup: input.WorkGroup }));
};
var serializeAws_json1_1StopQueryExecutionInput = function (input, context) {
    var _a;
    return {
        QueryExecutionId: (_a = input.QueryExecutionId) !== null && _a !== void 0 ? _a : generateIdempotencyToken(),
    };
};
var serializeAws_json1_1Tag = function (input, context) {
    return __assign(__assign({}, (input.Key != null && { Key: input.Key })), (input.Value != null && { Value: input.Value }));
};
var serializeAws_json1_1TagKeyList = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        return entry;
    });
};
var serializeAws_json1_1TagList = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        return serializeAws_json1_1Tag(entry, context);
    });
};
var serializeAws_json1_1TagResourceInput = function (input, context) {
    return __assign(__assign({}, (input.ResourceARN != null && { ResourceARN: input.ResourceARN })), (input.Tags != null && { Tags: serializeAws_json1_1TagList(input.Tags, context) }));
};
var serializeAws_json1_1UntagResourceInput = function (input, context) {
    return __assign(__assign({}, (input.ResourceARN != null && { ResourceARN: input.ResourceARN })), (input.TagKeys != null && { TagKeys: serializeAws_json1_1TagKeyList(input.TagKeys, context) }));
};
var serializeAws_json1_1UpdateDataCatalogInput = function (input, context) {
    return __assign(__assign(__assign(__assign({}, (input.Description != null && { Description: input.Description })), (input.Name != null && { Name: input.Name })), (input.Parameters != null && { Parameters: serializeAws_json1_1ParametersMap(input.Parameters, context) })), (input.Type != null && { Type: input.Type }));
};
var serializeAws_json1_1UpdateNamedQueryInput = function (input, context) {
    return __assign(__assign(__assign(__assign({}, (input.Description != null && { Description: input.Description })), (input.Name != null && { Name: input.Name })), (input.NamedQueryId != null && { NamedQueryId: input.NamedQueryId })), (input.QueryString != null && { QueryString: input.QueryString }));
};
var serializeAws_json1_1UpdatePreparedStatementInput = function (input, context) {
    return __assign(__assign(__assign(__assign({}, (input.Description != null && { Description: input.Description })), (input.QueryStatement != null && { QueryStatement: input.QueryStatement })), (input.StatementName != null && { StatementName: input.StatementName })), (input.WorkGroup != null && { WorkGroup: input.WorkGroup }));
};
var serializeAws_json1_1UpdateWorkGroupInput = function (input, context) {
    return __assign(__assign(__assign(__assign({}, (input.ConfigurationUpdates != null && {
        ConfigurationUpdates: serializeAws_json1_1WorkGroupConfigurationUpdates(input.ConfigurationUpdates, context),
    })), (input.Description != null && { Description: input.Description })), (input.State != null && { State: input.State })), (input.WorkGroup != null && { WorkGroup: input.WorkGroup }));
};
var serializeAws_json1_1WorkGroupConfiguration = function (input, context) {
    return __assign(__assign(__assign(__assign(__assign(__assign({}, (input.BytesScannedCutoffPerQuery != null && { BytesScannedCutoffPerQuery: input.BytesScannedCutoffPerQuery })), (input.EnforceWorkGroupConfiguration != null && {
        EnforceWorkGroupConfiguration: input.EnforceWorkGroupConfiguration,
    })), (input.EngineVersion != null && {
        EngineVersion: serializeAws_json1_1EngineVersion(input.EngineVersion, context),
    })), (input.PublishCloudWatchMetricsEnabled != null && {
        PublishCloudWatchMetricsEnabled: input.PublishCloudWatchMetricsEnabled,
    })), (input.RequesterPaysEnabled != null && { RequesterPaysEnabled: input.RequesterPaysEnabled })), (input.ResultConfiguration != null && {
        ResultConfiguration: serializeAws_json1_1ResultConfiguration(input.ResultConfiguration, context),
    }));
};
var serializeAws_json1_1WorkGroupConfigurationUpdates = function (input, context) {
    return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (input.BytesScannedCutoffPerQuery != null && { BytesScannedCutoffPerQuery: input.BytesScannedCutoffPerQuery })), (input.EnforceWorkGroupConfiguration != null && {
        EnforceWorkGroupConfiguration: input.EnforceWorkGroupConfiguration,
    })), (input.EngineVersion != null && {
        EngineVersion: serializeAws_json1_1EngineVersion(input.EngineVersion, context),
    })), (input.PublishCloudWatchMetricsEnabled != null && {
        PublishCloudWatchMetricsEnabled: input.PublishCloudWatchMetricsEnabled,
    })), (input.RemoveBytesScannedCutoffPerQuery != null && {
        RemoveBytesScannedCutoffPerQuery: input.RemoveBytesScannedCutoffPerQuery,
    })), (input.RequesterPaysEnabled != null && { RequesterPaysEnabled: input.RequesterPaysEnabled })), (input.ResultConfigurationUpdates != null && {
        ResultConfigurationUpdates: serializeAws_json1_1ResultConfigurationUpdates(input.ResultConfigurationUpdates, context),
    }));
};
var deserializeAws_json1_1AclConfiguration = function (output, context) {
    return {
        S3AclOption: __expectString(output.S3AclOption),
    };
};
var deserializeAws_json1_1AthenaError = function (output, context) {
    return {
        ErrorCategory: __expectInt32(output.ErrorCategory),
        ErrorMessage: __expectString(output.ErrorMessage),
        ErrorType: __expectInt32(output.ErrorType),
        Retryable: __expectBoolean(output.Retryable),
    };
};
var deserializeAws_json1_1BatchGetNamedQueryOutput = function (output, context) {
    return {
        NamedQueries: output.NamedQueries != null ? deserializeAws_json1_1NamedQueryList(output.NamedQueries, context) : undefined,
        UnprocessedNamedQueryIds: output.UnprocessedNamedQueryIds != null
            ? deserializeAws_json1_1UnprocessedNamedQueryIdList(output.UnprocessedNamedQueryIds, context)
            : undefined,
    };
};
var deserializeAws_json1_1BatchGetPreparedStatementOutput = function (output, context) {
    return {
        PreparedStatements: output.PreparedStatements != null
            ? deserializeAws_json1_1PreparedStatementDetailsList(output.PreparedStatements, context)
            : undefined,
        UnprocessedPreparedStatementNames: output.UnprocessedPreparedStatementNames != null
            ? deserializeAws_json1_1UnprocessedPreparedStatementNameList(output.UnprocessedPreparedStatementNames, context)
            : undefined,
    };
};
var deserializeAws_json1_1BatchGetQueryExecutionOutput = function (output, context) {
    return {
        QueryExecutions: output.QueryExecutions != null
            ? deserializeAws_json1_1QueryExecutionList(output.QueryExecutions, context)
            : undefined,
        UnprocessedQueryExecutionIds: output.UnprocessedQueryExecutionIds != null
            ? deserializeAws_json1_1UnprocessedQueryExecutionIdList(output.UnprocessedQueryExecutionIds, context)
            : undefined,
    };
};
var deserializeAws_json1_1Column = function (output, context) {
    return {
        Comment: __expectString(output.Comment),
        Name: __expectString(output.Name),
        Type: __expectString(output.Type),
    };
};
var deserializeAws_json1_1ColumnInfo = function (output, context) {
    return {
        CaseSensitive: __expectBoolean(output.CaseSensitive),
        CatalogName: __expectString(output.CatalogName),
        Label: __expectString(output.Label),
        Name: __expectString(output.Name),
        Nullable: __expectString(output.Nullable),
        Precision: __expectInt32(output.Precision),
        Scale: __expectInt32(output.Scale),
        SchemaName: __expectString(output.SchemaName),
        TableName: __expectString(output.TableName),
        Type: __expectString(output.Type),
    };
};
var deserializeAws_json1_1ColumnInfoList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1ColumnInfo(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1ColumnList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1Column(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1CreateDataCatalogOutput = function (output, context) {
    return {};
};
var deserializeAws_json1_1CreateNamedQueryOutput = function (output, context) {
    return {
        NamedQueryId: __expectString(output.NamedQueryId),
    };
};
var deserializeAws_json1_1CreatePreparedStatementOutput = function (output, context) {
    return {};
};
var deserializeAws_json1_1CreateWorkGroupOutput = function (output, context) {
    return {};
};
var deserializeAws_json1_1Database = function (output, context) {
    return {
        Description: __expectString(output.Description),
        Name: __expectString(output.Name),
        Parameters: output.Parameters != null ? deserializeAws_json1_1ParametersMap(output.Parameters, context) : undefined,
    };
};
var deserializeAws_json1_1DatabaseList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1Database(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1DataCatalog = function (output, context) {
    return {
        Description: __expectString(output.Description),
        Name: __expectString(output.Name),
        Parameters: output.Parameters != null ? deserializeAws_json1_1ParametersMap(output.Parameters, context) : undefined,
        Type: __expectString(output.Type),
    };
};
var deserializeAws_json1_1DataCatalogSummary = function (output, context) {
    return {
        CatalogName: __expectString(output.CatalogName),
        Type: __expectString(output.Type),
    };
};
var deserializeAws_json1_1DataCatalogSummaryList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1DataCatalogSummary(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1Datum = function (output, context) {
    return {
        VarCharValue: __expectString(output.VarCharValue),
    };
};
var deserializeAws_json1_1datumList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1Datum(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1DeleteDataCatalogOutput = function (output, context) {
    return {};
};
var deserializeAws_json1_1DeleteNamedQueryOutput = function (output, context) {
    return {};
};
var deserializeAws_json1_1DeletePreparedStatementOutput = function (output, context) {
    return {};
};
var deserializeAws_json1_1DeleteWorkGroupOutput = function (output, context) {
    return {};
};
var deserializeAws_json1_1EncryptionConfiguration = function (output, context) {
    return {
        EncryptionOption: __expectString(output.EncryptionOption),
        KmsKey: __expectString(output.KmsKey),
    };
};
var deserializeAws_json1_1EngineVersion = function (output, context) {
    return {
        EffectiveEngineVersion: __expectString(output.EffectiveEngineVersion),
        SelectedEngineVersion: __expectString(output.SelectedEngineVersion),
    };
};
var deserializeAws_json1_1EngineVersionsList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1EngineVersion(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1ExecutionParameters = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return __expectString(entry);
    });
    return retVal;
};
var deserializeAws_json1_1GetDatabaseOutput = function (output, context) {
    return {
        Database: output.Database != null ? deserializeAws_json1_1Database(output.Database, context) : undefined,
    };
};
var deserializeAws_json1_1GetDataCatalogOutput = function (output, context) {
    return {
        DataCatalog: output.DataCatalog != null ? deserializeAws_json1_1DataCatalog(output.DataCatalog, context) : undefined,
    };
};
var deserializeAws_json1_1GetNamedQueryOutput = function (output, context) {
    return {
        NamedQuery: output.NamedQuery != null ? deserializeAws_json1_1NamedQuery(output.NamedQuery, context) : undefined,
    };
};
var deserializeAws_json1_1GetPreparedStatementOutput = function (output, context) {
    return {
        PreparedStatement: output.PreparedStatement != null
            ? deserializeAws_json1_1PreparedStatement(output.PreparedStatement, context)
            : undefined,
    };
};
var deserializeAws_json1_1GetQueryExecutionOutput = function (output, context) {
    return {
        QueryExecution: output.QueryExecution != null ? deserializeAws_json1_1QueryExecution(output.QueryExecution, context) : undefined,
    };
};
var deserializeAws_json1_1GetQueryResultsOutput = function (output, context) {
    return {
        NextToken: __expectString(output.NextToken),
        ResultSet: output.ResultSet != null ? deserializeAws_json1_1ResultSet(output.ResultSet, context) : undefined,
        UpdateCount: __expectLong(output.UpdateCount),
    };
};
var deserializeAws_json1_1GetQueryRuntimeStatisticsOutput = function (output, context) {
    return {
        QueryRuntimeStatistics: output.QueryRuntimeStatistics != null
            ? deserializeAws_json1_1QueryRuntimeStatistics(output.QueryRuntimeStatistics, context)
            : undefined,
    };
};
var deserializeAws_json1_1GetTableMetadataOutput = function (output, context) {
    return {
        TableMetadata: output.TableMetadata != null ? deserializeAws_json1_1TableMetadata(output.TableMetadata, context) : undefined,
    };
};
var deserializeAws_json1_1GetWorkGroupOutput = function (output, context) {
    return {
        WorkGroup: output.WorkGroup != null ? deserializeAws_json1_1WorkGroup(output.WorkGroup, context) : undefined,
    };
};
var deserializeAws_json1_1InternalServerException = function (output, context) {
    return {
        Message: __expectString(output.Message),
    };
};
var deserializeAws_json1_1InvalidRequestException = function (output, context) {
    return {
        AthenaErrorCode: __expectString(output.AthenaErrorCode),
        Message: __expectString(output.Message),
    };
};
var deserializeAws_json1_1ListDatabasesOutput = function (output, context) {
    return {
        DatabaseList: output.DatabaseList != null ? deserializeAws_json1_1DatabaseList(output.DatabaseList, context) : undefined,
        NextToken: __expectString(output.NextToken),
    };
};
var deserializeAws_json1_1ListDataCatalogsOutput = function (output, context) {
    return {
        DataCatalogsSummary: output.DataCatalogsSummary != null
            ? deserializeAws_json1_1DataCatalogSummaryList(output.DataCatalogsSummary, context)
            : undefined,
        NextToken: __expectString(output.NextToken),
    };
};
var deserializeAws_json1_1ListEngineVersionsOutput = function (output, context) {
    return {
        EngineVersions: output.EngineVersions != null
            ? deserializeAws_json1_1EngineVersionsList(output.EngineVersions, context)
            : undefined,
        NextToken: __expectString(output.NextToken),
    };
};
var deserializeAws_json1_1ListNamedQueriesOutput = function (output, context) {
    return {
        NamedQueryIds: output.NamedQueryIds != null ? deserializeAws_json1_1NamedQueryIdList(output.NamedQueryIds, context) : undefined,
        NextToken: __expectString(output.NextToken),
    };
};
var deserializeAws_json1_1ListPreparedStatementsOutput = function (output, context) {
    return {
        NextToken: __expectString(output.NextToken),
        PreparedStatements: output.PreparedStatements != null
            ? deserializeAws_json1_1PreparedStatementsList(output.PreparedStatements, context)
            : undefined,
    };
};
var deserializeAws_json1_1ListQueryExecutionsOutput = function (output, context) {
    return {
        NextToken: __expectString(output.NextToken),
        QueryExecutionIds: output.QueryExecutionIds != null
            ? deserializeAws_json1_1QueryExecutionIdList(output.QueryExecutionIds, context)
            : undefined,
    };
};
var deserializeAws_json1_1ListTableMetadataOutput = function (output, context) {
    return {
        NextToken: __expectString(output.NextToken),
        TableMetadataList: output.TableMetadataList != null
            ? deserializeAws_json1_1TableMetadataList(output.TableMetadataList, context)
            : undefined,
    };
};
var deserializeAws_json1_1ListTagsForResourceOutput = function (output, context) {
    return {
        NextToken: __expectString(output.NextToken),
        Tags: output.Tags != null ? deserializeAws_json1_1TagList(output.Tags, context) : undefined,
    };
};
var deserializeAws_json1_1ListWorkGroupsOutput = function (output, context) {
    return {
        NextToken: __expectString(output.NextToken),
        WorkGroups: output.WorkGroups != null ? deserializeAws_json1_1WorkGroupsList(output.WorkGroups, context) : undefined,
    };
};
var deserializeAws_json1_1MetadataException = function (output, context) {
    return {
        Message: __expectString(output.Message),
    };
};
var deserializeAws_json1_1NamedQuery = function (output, context) {
    return {
        Database: __expectString(output.Database),
        Description: __expectString(output.Description),
        Name: __expectString(output.Name),
        NamedQueryId: __expectString(output.NamedQueryId),
        QueryString: __expectString(output.QueryString),
        WorkGroup: __expectString(output.WorkGroup),
    };
};
var deserializeAws_json1_1NamedQueryIdList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return __expectString(entry);
    });
    return retVal;
};
var deserializeAws_json1_1NamedQueryList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1NamedQuery(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1ParametersMap = function (output, context) {
    return Object.entries(output).reduce(function (acc, _a) {
        var _b;
        var _c = __read(_a, 2), key = _c[0], value = _c[1];
        if (value === null) {
            return acc;
        }
        return __assign(__assign({}, acc), (_b = {}, _b[key] = __expectString(value), _b));
    }, {});
};
var deserializeAws_json1_1PreparedStatement = function (output, context) {
    return {
        Description: __expectString(output.Description),
        LastModifiedTime: output.LastModifiedTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
            : undefined,
        QueryStatement: __expectString(output.QueryStatement),
        StatementName: __expectString(output.StatementName),
        WorkGroupName: __expectString(output.WorkGroupName),
    };
};
var deserializeAws_json1_1PreparedStatementDetailsList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1PreparedStatement(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1PreparedStatementsList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1PreparedStatementSummary(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1PreparedStatementSummary = function (output, context) {
    return {
        LastModifiedTime: output.LastModifiedTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
            : undefined,
        StatementName: __expectString(output.StatementName),
    };
};
var deserializeAws_json1_1QueryExecution = function (output, context) {
    return {
        EngineVersion: output.EngineVersion != null ? deserializeAws_json1_1EngineVersion(output.EngineVersion, context) : undefined,
        ExecutionParameters: output.ExecutionParameters != null
            ? deserializeAws_json1_1ExecutionParameters(output.ExecutionParameters, context)
            : undefined,
        Query: __expectString(output.Query),
        QueryExecutionContext: output.QueryExecutionContext != null
            ? deserializeAws_json1_1QueryExecutionContext(output.QueryExecutionContext, context)
            : undefined,
        QueryExecutionId: __expectString(output.QueryExecutionId),
        ResultConfiguration: output.ResultConfiguration != null
            ? deserializeAws_json1_1ResultConfiguration(output.ResultConfiguration, context)
            : undefined,
        StatementType: __expectString(output.StatementType),
        Statistics: output.Statistics != null
            ? deserializeAws_json1_1QueryExecutionStatistics(output.Statistics, context)
            : undefined,
        Status: output.Status != null ? deserializeAws_json1_1QueryExecutionStatus(output.Status, context) : undefined,
        WorkGroup: __expectString(output.WorkGroup),
    };
};
var deserializeAws_json1_1QueryExecutionContext = function (output, context) {
    return {
        Catalog: __expectString(output.Catalog),
        Database: __expectString(output.Database),
    };
};
var deserializeAws_json1_1QueryExecutionIdList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return __expectString(entry);
    });
    return retVal;
};
var deserializeAws_json1_1QueryExecutionList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1QueryExecution(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1QueryExecutionStatistics = function (output, context) {
    return {
        DataManifestLocation: __expectString(output.DataManifestLocation),
        DataScannedInBytes: __expectLong(output.DataScannedInBytes),
        EngineExecutionTimeInMillis: __expectLong(output.EngineExecutionTimeInMillis),
        QueryPlanningTimeInMillis: __expectLong(output.QueryPlanningTimeInMillis),
        QueryQueueTimeInMillis: __expectLong(output.QueryQueueTimeInMillis),
        ServiceProcessingTimeInMillis: __expectLong(output.ServiceProcessingTimeInMillis),
        TotalExecutionTimeInMillis: __expectLong(output.TotalExecutionTimeInMillis),
    };
};
var deserializeAws_json1_1QueryExecutionStatus = function (output, context) {
    return {
        AthenaError: output.AthenaError != null ? deserializeAws_json1_1AthenaError(output.AthenaError, context) : undefined,
        CompletionDateTime: output.CompletionDateTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CompletionDateTime)))
            : undefined,
        State: __expectString(output.State),
        StateChangeReason: __expectString(output.StateChangeReason),
        SubmissionDateTime: output.SubmissionDateTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.SubmissionDateTime)))
            : undefined,
    };
};
var deserializeAws_json1_1QueryRuntimeStatistics = function (output, context) {
    return {
        OutputStage: output.OutputStage != null ? deserializeAws_json1_1QueryStage(output.OutputStage, context) : undefined,
        Rows: output.Rows != null ? deserializeAws_json1_1QueryRuntimeStatisticsRows(output.Rows, context) : undefined,
        Timeline: output.Timeline != null
            ? deserializeAws_json1_1QueryRuntimeStatisticsTimeline(output.Timeline, context)
            : undefined,
    };
};
var deserializeAws_json1_1QueryRuntimeStatisticsRows = function (output, context) {
    return {
        InputBytes: __expectLong(output.InputBytes),
        InputRows: __expectLong(output.InputRows),
        OutputBytes: __expectLong(output.OutputBytes),
        OutputRows: __expectLong(output.OutputRows),
    };
};
var deserializeAws_json1_1QueryRuntimeStatisticsTimeline = function (output, context) {
    return {
        EngineExecutionTimeInMillis: __expectLong(output.EngineExecutionTimeInMillis),
        QueryPlanningTimeInMillis: __expectLong(output.QueryPlanningTimeInMillis),
        QueryQueueTimeInMillis: __expectLong(output.QueryQueueTimeInMillis),
        ServiceProcessingTimeInMillis: __expectLong(output.ServiceProcessingTimeInMillis),
        TotalExecutionTimeInMillis: __expectLong(output.TotalExecutionTimeInMillis),
    };
};
var deserializeAws_json1_1QueryStage = function (output, context) {
    return {
        ExecutionTime: __expectLong(output.ExecutionTime),
        InputBytes: __expectLong(output.InputBytes),
        InputRows: __expectLong(output.InputRows),
        OutputBytes: __expectLong(output.OutputBytes),
        OutputRows: __expectLong(output.OutputRows),
        QueryStagePlan: output.QueryStagePlan != null
            ? deserializeAws_json1_1QueryStagePlanNode(output.QueryStagePlan, context)
            : undefined,
        StageId: __expectLong(output.StageId),
        State: __expectString(output.State),
        SubStages: output.SubStages != null ? deserializeAws_json1_1QueryStages(output.SubStages, context) : undefined,
    };
};
var deserializeAws_json1_1QueryStagePlanNode = function (output, context) {
    return {
        Children: output.Children != null ? deserializeAws_json1_1QueryStagePlanNodes(output.Children, context) : undefined,
        Identifier: __expectString(output.Identifier),
        Name: __expectString(output.Name),
        RemoteSources: output.RemoteSources != null ? deserializeAws_json1_1StringList(output.RemoteSources, context) : undefined,
    };
};
var deserializeAws_json1_1QueryStagePlanNodes = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1QueryStagePlanNode(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1QueryStages = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1QueryStage(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1ResourceNotFoundException = function (output, context) {
    return {
        Message: __expectString(output.Message),
        ResourceName: __expectString(output.ResourceName),
    };
};
var deserializeAws_json1_1ResultConfiguration = function (output, context) {
    return {
        AclConfiguration: output.AclConfiguration != null
            ? deserializeAws_json1_1AclConfiguration(output.AclConfiguration, context)
            : undefined,
        EncryptionConfiguration: output.EncryptionConfiguration != null
            ? deserializeAws_json1_1EncryptionConfiguration(output.EncryptionConfiguration, context)
            : undefined,
        ExpectedBucketOwner: __expectString(output.ExpectedBucketOwner),
        OutputLocation: __expectString(output.OutputLocation),
    };
};
var deserializeAws_json1_1ResultSet = function (output, context) {
    return {
        ResultSetMetadata: output.ResultSetMetadata != null
            ? deserializeAws_json1_1ResultSetMetadata(output.ResultSetMetadata, context)
            : undefined,
        Rows: output.Rows != null ? deserializeAws_json1_1RowList(output.Rows, context) : undefined,
    };
};
var deserializeAws_json1_1ResultSetMetadata = function (output, context) {
    return {
        ColumnInfo: output.ColumnInfo != null ? deserializeAws_json1_1ColumnInfoList(output.ColumnInfo, context) : undefined,
    };
};
var deserializeAws_json1_1Row = function (output, context) {
    return {
        Data: output.Data != null ? deserializeAws_json1_1datumList(output.Data, context) : undefined,
    };
};
var deserializeAws_json1_1RowList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1Row(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1StartQueryExecutionOutput = function (output, context) {
    return {
        QueryExecutionId: __expectString(output.QueryExecutionId),
    };
};
var deserializeAws_json1_1StopQueryExecutionOutput = function (output, context) {
    return {};
};
var deserializeAws_json1_1StringList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return __expectString(entry);
    });
    return retVal;
};
var deserializeAws_json1_1TableMetadata = function (output, context) {
    return {
        Columns: output.Columns != null ? deserializeAws_json1_1ColumnList(output.Columns, context) : undefined,
        CreateTime: output.CreateTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreateTime))) : undefined,
        LastAccessTime: output.LastAccessTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastAccessTime)))
            : undefined,
        Name: __expectString(output.Name),
        Parameters: output.Parameters != null ? deserializeAws_json1_1ParametersMap(output.Parameters, context) : undefined,
        PartitionKeys: output.PartitionKeys != null ? deserializeAws_json1_1ColumnList(output.PartitionKeys, context) : undefined,
        TableType: __expectString(output.TableType),
    };
};
var deserializeAws_json1_1TableMetadataList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1TableMetadata(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1Tag = function (output, context) {
    return {
        Key: __expectString(output.Key),
        Value: __expectString(output.Value),
    };
};
var deserializeAws_json1_1TagList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1Tag(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1TagResourceOutput = function (output, context) {
    return {};
};
var deserializeAws_json1_1TooManyRequestsException = function (output, context) {
    return {
        Message: __expectString(output.Message),
        Reason: __expectString(output.Reason),
    };
};
var deserializeAws_json1_1UnprocessedNamedQueryId = function (output, context) {
    return {
        ErrorCode: __expectString(output.ErrorCode),
        ErrorMessage: __expectString(output.ErrorMessage),
        NamedQueryId: __expectString(output.NamedQueryId),
    };
};
var deserializeAws_json1_1UnprocessedNamedQueryIdList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1UnprocessedNamedQueryId(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1UnprocessedPreparedStatementName = function (output, context) {
    return {
        ErrorCode: __expectString(output.ErrorCode),
        ErrorMessage: __expectString(output.ErrorMessage),
        StatementName: __expectString(output.StatementName),
    };
};
var deserializeAws_json1_1UnprocessedPreparedStatementNameList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1UnprocessedPreparedStatementName(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1UnprocessedQueryExecutionId = function (output, context) {
    return {
        ErrorCode: __expectString(output.ErrorCode),
        ErrorMessage: __expectString(output.ErrorMessage),
        QueryExecutionId: __expectString(output.QueryExecutionId),
    };
};
var deserializeAws_json1_1UnprocessedQueryExecutionIdList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1UnprocessedQueryExecutionId(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1UntagResourceOutput = function (output, context) {
    return {};
};
var deserializeAws_json1_1UpdateDataCatalogOutput = function (output, context) {
    return {};
};
var deserializeAws_json1_1UpdateNamedQueryOutput = function (output, context) {
    return {};
};
var deserializeAws_json1_1UpdatePreparedStatementOutput = function (output, context) {
    return {};
};
var deserializeAws_json1_1UpdateWorkGroupOutput = function (output, context) {
    return {};
};
var deserializeAws_json1_1WorkGroup = function (output, context) {
    return {
        Configuration: output.Configuration != null
            ? deserializeAws_json1_1WorkGroupConfiguration(output.Configuration, context)
            : undefined,
        CreationTime: output.CreationTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
            : undefined,
        Description: __expectString(output.Description),
        Name: __expectString(output.Name),
        State: __expectString(output.State),
    };
};
var deserializeAws_json1_1WorkGroupConfiguration = function (output, context) {
    return {
        BytesScannedCutoffPerQuery: __expectLong(output.BytesScannedCutoffPerQuery),
        EnforceWorkGroupConfiguration: __expectBoolean(output.EnforceWorkGroupConfiguration),
        EngineVersion: output.EngineVersion != null ? deserializeAws_json1_1EngineVersion(output.EngineVersion, context) : undefined,
        PublishCloudWatchMetricsEnabled: __expectBoolean(output.PublishCloudWatchMetricsEnabled),
        RequesterPaysEnabled: __expectBoolean(output.RequesterPaysEnabled),
        ResultConfiguration: output.ResultConfiguration != null
            ? deserializeAws_json1_1ResultConfiguration(output.ResultConfiguration, context)
            : undefined,
    };
};
var deserializeAws_json1_1WorkGroupsList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1WorkGroupSummary(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1WorkGroupSummary = function (output, context) {
    return {
        CreationTime: output.CreationTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
            : undefined,
        Description: __expectString(output.Description),
        EngineVersion: output.EngineVersion != null ? deserializeAws_json1_1EngineVersion(output.EngineVersion, context) : undefined,
        Name: __expectString(output.Name),
        State: __expectString(output.State),
    };
};
var deserializeMetadata = function (output) {
    var _a;
    return ({
        httpStatusCode: output.statusCode,
        requestId: (_a = output.headers["x-amzn-requestid"]) !== null && _a !== void 0 ? _a : output.headers["x-amzn-request-id"],
        extendedRequestId: output.headers["x-amz-id-2"],
        cfId: output.headers["x-amz-cf-id"],
    });
};
var collectBody = function (streamBody, context) {
    if (streamBody === void 0) { streamBody = new Uint8Array(); }
    if (streamBody instanceof Uint8Array) {
        return Promise.resolve(streamBody);
    }
    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());
};
var collectBodyString = function (streamBody, context) {
    return collectBody(streamBody, context).then(function (body) { return context.utf8Encoder(body); });
};
var buildHttpRpcRequest = function (context, headers, path, resolvedHostname, body) { return __awaiter(void 0, void 0, void 0, function () {
    var _a, hostname, _b, protocol, port, basePath, contents;
    return __generator(this, function (_c) {
        switch (_c.label) {
            case 0: return [4, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port, basePath = _a.path;
                contents = {
                    protocol: protocol,
                    hostname: hostname,
                    port: port,
                    method: "POST",
                    path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
                    headers: headers,
                };
                if (resolvedHostname !== undefined) {
                    contents.hostname = resolvedHostname;
                }
                if (body !== undefined) {
                    contents.body = body;
                }
                return [2, new __HttpRequest(contents)];
        }
    });
}); };
var parseBody = function (streamBody, context) {
    return collectBodyString(streamBody, context).then(function (encoded) {
        if (encoded.length) {
            return JSON.parse(encoded);
        }
        return {};
    });
};
var loadRestJsonErrorCode = function (output, data) {
    var findKey = function (object, key) { return Object.keys(object).find(function (k) { return k.toLowerCase() === key.toLowerCase(); }); };
    var sanitizeErrorCode = function (rawValue) {
        var cleanValue = rawValue;
        if (typeof cleanValue === "number") {
            cleanValue = cleanValue.toString();
        }
        if (cleanValue.indexOf(",") >= 0) {
            cleanValue = cleanValue.split(",")[0];
        }
        if (cleanValue.indexOf(":") >= 0) {
            cleanValue = cleanValue.split(":")[0];
        }
        if (cleanValue.indexOf("#") >= 0) {
            cleanValue = cleanValue.split("#")[1];
        }
        return cleanValue;
    };
    var headerKey = findKey(output.headers, "x-amzn-errortype");
    if (headerKey !== undefined) {
        return sanitizeErrorCode(output.headers[headerKey]);
    }
    if (data.code !== undefined) {
        return sanitizeErrorCode(data.code);
    }
    if (data["__type"] !== undefined) {
        return sanitizeErrorCode(data["__type"]);
    }
};
