import { __assign, __extends } from "tslib";
import { AthenaServiceException as __BaseException } from "./AthenaServiceException";
export var S3AclOption;
(function (S3AclOption) {
    S3AclOption["BUCKET_OWNER_FULL_CONTROL"] = "BUCKET_OWNER_FULL_CONTROL";
})(S3AclOption || (S3AclOption = {}));
var InternalServerException = (function (_super) {
    __extends(InternalServerException, _super);
    function InternalServerException(opts) {
        var _this = _super.call(this, __assign({ name: "InternalServerException", $fault: "server" }, opts)) || this;
        _this.name = "InternalServerException";
        _this.$fault = "server";
        Object.setPrototypeOf(_this, InternalServerException.prototype);
        _this.Message = opts.Message;
        return _this;
    }
    return InternalServerException;
}(__BaseException));
export { InternalServerException };
var InvalidRequestException = (function (_super) {
    __extends(InvalidRequestException, _super);
    function InvalidRequestException(opts) {
        var _this = _super.call(this, __assign({ name: "InvalidRequestException", $fault: "client" }, opts)) || this;
        _this.name = "InvalidRequestException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, InvalidRequestException.prototype);
        _this.AthenaErrorCode = opts.AthenaErrorCode;
        _this.Message = opts.Message;
        return _this;
    }
    return InvalidRequestException;
}(__BaseException));
export { InvalidRequestException };
export var EncryptionOption;
(function (EncryptionOption) {
    EncryptionOption["CSE_KMS"] = "CSE_KMS";
    EncryptionOption["SSE_KMS"] = "SSE_KMS";
    EncryptionOption["SSE_S3"] = "SSE_S3";
})(EncryptionOption || (EncryptionOption = {}));
export var StatementType;
(function (StatementType) {
    StatementType["DDL"] = "DDL";
    StatementType["DML"] = "DML";
    StatementType["UTILITY"] = "UTILITY";
})(StatementType || (StatementType = {}));
export var QueryExecutionState;
(function (QueryExecutionState) {
    QueryExecutionState["CANCELLED"] = "CANCELLED";
    QueryExecutionState["FAILED"] = "FAILED";
    QueryExecutionState["QUEUED"] = "QUEUED";
    QueryExecutionState["RUNNING"] = "RUNNING";
    QueryExecutionState["SUCCEEDED"] = "SUCCEEDED";
})(QueryExecutionState || (QueryExecutionState = {}));
export var DataCatalogType;
(function (DataCatalogType) {
    DataCatalogType["GLUE"] = "GLUE";
    DataCatalogType["HIVE"] = "HIVE";
    DataCatalogType["LAMBDA"] = "LAMBDA";
})(DataCatalogType || (DataCatalogType = {}));
var ResourceNotFoundException = (function (_super) {
    __extends(ResourceNotFoundException, _super);
    function ResourceNotFoundException(opts) {
        var _this = _super.call(this, __assign({ name: "ResourceNotFoundException", $fault: "client" }, opts)) || this;
        _this.name = "ResourceNotFoundException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, ResourceNotFoundException.prototype);
        _this.Message = opts.Message;
        _this.ResourceName = opts.ResourceName;
        return _this;
    }
    return ResourceNotFoundException;
}(__BaseException));
export { ResourceNotFoundException };
var MetadataException = (function (_super) {
    __extends(MetadataException, _super);
    function MetadataException(opts) {
        var _this = _super.call(this, __assign({ name: "MetadataException", $fault: "client" }, opts)) || this;
        _this.name = "MetadataException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, MetadataException.prototype);
        _this.Message = opts.Message;
        return _this;
    }
    return MetadataException;
}(__BaseException));
export { MetadataException };
export var ColumnNullable;
(function (ColumnNullable) {
    ColumnNullable["NOT_NULL"] = "NOT_NULL";
    ColumnNullable["NULLABLE"] = "NULLABLE";
    ColumnNullable["UNKNOWN"] = "UNKNOWN";
})(ColumnNullable || (ColumnNullable = {}));
export var WorkGroupState;
(function (WorkGroupState) {
    WorkGroupState["DISABLED"] = "DISABLED";
    WorkGroupState["ENABLED"] = "ENABLED";
})(WorkGroupState || (WorkGroupState = {}));
export var ThrottleReason;
(function (ThrottleReason) {
    ThrottleReason["CONCURRENT_QUERY_LIMIT_EXCEEDED"] = "CONCURRENT_QUERY_LIMIT_EXCEEDED";
})(ThrottleReason || (ThrottleReason = {}));
var TooManyRequestsException = (function (_super) {
    __extends(TooManyRequestsException, _super);
    function TooManyRequestsException(opts) {
        var _this = _super.call(this, __assign({ name: "TooManyRequestsException", $fault: "client" }, opts)) || this;
        _this.name = "TooManyRequestsException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, TooManyRequestsException.prototype);
        _this.Message = opts.Message;
        _this.Reason = opts.Reason;
        return _this;
    }
    return TooManyRequestsException;
}(__BaseException));
export { TooManyRequestsException };
export var AclConfigurationFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var BatchGetNamedQueryInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var NamedQueryFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UnprocessedNamedQueryIdFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var BatchGetNamedQueryOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var BatchGetPreparedStatementInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var PreparedStatementFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UnprocessedPreparedStatementNameFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var BatchGetPreparedStatementOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var BatchGetQueryExecutionInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var EngineVersionFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var QueryExecutionContextFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var EncryptionConfigurationFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ResultConfigurationFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var QueryExecutionStatisticsFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var AthenaErrorFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var QueryExecutionStatusFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var QueryExecutionFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UnprocessedQueryExecutionIdFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var BatchGetQueryExecutionOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var TagFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var CreateDataCatalogInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var CreateDataCatalogOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var CreateNamedQueryInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var CreateNamedQueryOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var CreatePreparedStatementInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var CreatePreparedStatementOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var WorkGroupConfigurationFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var CreateWorkGroupInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var CreateWorkGroupOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var DeleteDataCatalogInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var DeleteDataCatalogOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var DeleteNamedQueryInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var DeleteNamedQueryOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var DeletePreparedStatementInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var DeletePreparedStatementOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var DeleteWorkGroupInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var DeleteWorkGroupOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var GetDatabaseInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var DatabaseFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var GetDatabaseOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var GetDataCatalogInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var DataCatalogFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var GetDataCatalogOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var GetNamedQueryInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var GetNamedQueryOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var GetPreparedStatementInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var GetPreparedStatementOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var GetQueryExecutionInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var GetQueryExecutionOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var GetQueryResultsInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ColumnInfoFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ResultSetMetadataFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var DatumFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var RowFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ResultSetFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var GetQueryResultsOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var GetQueryRuntimeStatisticsInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var QueryRuntimeStatisticsRowsFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var QueryRuntimeStatisticsTimelineFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var GetTableMetadataInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ColumnFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var TableMetadataFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var GetTableMetadataOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var GetWorkGroupInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var WorkGroupFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var GetWorkGroupOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ListDatabasesInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ListDatabasesOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ListDataCatalogsInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var DataCatalogSummaryFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ListDataCatalogsOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ListEngineVersionsInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ListEngineVersionsOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ListNamedQueriesInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ListNamedQueriesOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ListPreparedStatementsInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var PreparedStatementSummaryFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ListPreparedStatementsOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ListQueryExecutionsInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ListQueryExecutionsOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ListTableMetadataInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ListTableMetadataOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ListTagsForResourceInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ListTagsForResourceOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ListWorkGroupsInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var WorkGroupSummaryFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ListWorkGroupsOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var StartQueryExecutionInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var StartQueryExecutionOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var StopQueryExecutionInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var StopQueryExecutionOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var TagResourceInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var TagResourceOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UntagResourceInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UntagResourceOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UpdateDataCatalogInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UpdateDataCatalogOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UpdateNamedQueryInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UpdateNamedQueryOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UpdatePreparedStatementInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UpdatePreparedStatementOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ResultConfigurationUpdatesFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var WorkGroupConfigurationUpdatesFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UpdateWorkGroupInputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UpdateWorkGroupOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var QueryStagePlanNodeFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var QueryStageFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var QueryRuntimeStatisticsFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var GetQueryRuntimeStatisticsOutputFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
