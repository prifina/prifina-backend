import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
import { BatchGetNamedQueryCommandInput, BatchGetNamedQueryCommandOutput } from "./commands/BatchGetNamedQueryCommand";
import { BatchGetPreparedStatementCommandInput, BatchGetPreparedStatementCommandOutput } from "./commands/BatchGetPreparedStatementCommand";
import { BatchGetQueryExecutionCommandInput, BatchGetQueryExecutionCommandOutput } from "./commands/BatchGetQueryExecutionCommand";
import { CreateDataCatalogCommandInput, CreateDataCatalogCommandOutput } from "./commands/CreateDataCatalogCommand";
import { CreateNamedQueryCommandInput, CreateNamedQueryCommandOutput } from "./commands/CreateNamedQueryCommand";
import { CreatePreparedStatementCommandInput, CreatePreparedStatementCommandOutput } from "./commands/CreatePreparedStatementCommand";
import { CreateWorkGroupCommandInput, CreateWorkGroupCommandOutput } from "./commands/CreateWorkGroupCommand";
import { DeleteDataCatalogCommandInput, DeleteDataCatalogCommandOutput } from "./commands/DeleteDataCatalogCommand";
import { DeleteNamedQueryCommandInput, DeleteNamedQueryCommandOutput } from "./commands/DeleteNamedQueryCommand";
import { DeletePreparedStatementCommandInput, DeletePreparedStatementCommandOutput } from "./commands/DeletePreparedStatementCommand";
import { DeleteWorkGroupCommandInput, DeleteWorkGroupCommandOutput } from "./commands/DeleteWorkGroupCommand";
import { GetDatabaseCommandInput, GetDatabaseCommandOutput } from "./commands/GetDatabaseCommand";
import { GetDataCatalogCommandInput, GetDataCatalogCommandOutput } from "./commands/GetDataCatalogCommand";
import { GetNamedQueryCommandInput, GetNamedQueryCommandOutput } from "./commands/GetNamedQueryCommand";
import { GetPreparedStatementCommandInput, GetPreparedStatementCommandOutput } from "./commands/GetPreparedStatementCommand";
import { GetQueryExecutionCommandInput, GetQueryExecutionCommandOutput } from "./commands/GetQueryExecutionCommand";
import { GetQueryResultsCommandInput, GetQueryResultsCommandOutput } from "./commands/GetQueryResultsCommand";
import { GetQueryRuntimeStatisticsCommandInput, GetQueryRuntimeStatisticsCommandOutput } from "./commands/GetQueryRuntimeStatisticsCommand";
import { GetTableMetadataCommandInput, GetTableMetadataCommandOutput } from "./commands/GetTableMetadataCommand";
import { GetWorkGroupCommandInput, GetWorkGroupCommandOutput } from "./commands/GetWorkGroupCommand";
import { ListDatabasesCommandInput, ListDatabasesCommandOutput } from "./commands/ListDatabasesCommand";
import { ListDataCatalogsCommandInput, ListDataCatalogsCommandOutput } from "./commands/ListDataCatalogsCommand";
import { ListEngineVersionsCommandInput, ListEngineVersionsCommandOutput } from "./commands/ListEngineVersionsCommand";
import { ListNamedQueriesCommandInput, ListNamedQueriesCommandOutput } from "./commands/ListNamedQueriesCommand";
import { ListPreparedStatementsCommandInput, ListPreparedStatementsCommandOutput } from "./commands/ListPreparedStatementsCommand";
import { ListQueryExecutionsCommandInput, ListQueryExecutionsCommandOutput } from "./commands/ListQueryExecutionsCommand";
import { ListTableMetadataCommandInput, ListTableMetadataCommandOutput } from "./commands/ListTableMetadataCommand";
import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "./commands/ListTagsForResourceCommand";
import { ListWorkGroupsCommandInput, ListWorkGroupsCommandOutput } from "./commands/ListWorkGroupsCommand";
import { StartQueryExecutionCommandInput, StartQueryExecutionCommandOutput } from "./commands/StartQueryExecutionCommand";
import { StopQueryExecutionCommandInput, StopQueryExecutionCommandOutput } from "./commands/StopQueryExecutionCommand";
import { TagResourceCommandInput, TagResourceCommandOutput } from "./commands/TagResourceCommand";
import { UntagResourceCommandInput, UntagResourceCommandOutput } from "./commands/UntagResourceCommand";
import { UpdateDataCatalogCommandInput, UpdateDataCatalogCommandOutput } from "./commands/UpdateDataCatalogCommand";
import { UpdateNamedQueryCommandInput, UpdateNamedQueryCommandOutput } from "./commands/UpdateNamedQueryCommand";
import { UpdatePreparedStatementCommandInput, UpdatePreparedStatementCommandOutput } from "./commands/UpdatePreparedStatementCommand";
import { UpdateWorkGroupCommandInput, UpdateWorkGroupCommandOutput } from "./commands/UpdateWorkGroupCommand";
export declare type ServiceInputTypes = BatchGetNamedQueryCommandInput | BatchGetPreparedStatementCommandInput | BatchGetQueryExecutionCommandInput | CreateDataCatalogCommandInput | CreateNamedQueryCommandInput | CreatePreparedStatementCommandInput | CreateWorkGroupCommandInput | DeleteDataCatalogCommandInput | DeleteNamedQueryCommandInput | DeletePreparedStatementCommandInput | DeleteWorkGroupCommandInput | GetDataCatalogCommandInput | GetDatabaseCommandInput | GetNamedQueryCommandInput | GetPreparedStatementCommandInput | GetQueryExecutionCommandInput | GetQueryResultsCommandInput | GetQueryRuntimeStatisticsCommandInput | GetTableMetadataCommandInput | GetWorkGroupCommandInput | ListDataCatalogsCommandInput | ListDatabasesCommandInput | ListEngineVersionsCommandInput | ListNamedQueriesCommandInput | ListPreparedStatementsCommandInput | ListQueryExecutionsCommandInput | ListTableMetadataCommandInput | ListTagsForResourceCommandInput | ListWorkGroupsCommandInput | StartQueryExecutionCommandInput | StopQueryExecutionCommandInput | TagResourceCommandInput | UntagResourceCommandInput | UpdateDataCatalogCommandInput | UpdateNamedQueryCommandInput | UpdatePreparedStatementCommandInput | UpdateWorkGroupCommandInput;
export declare type ServiceOutputTypes = BatchGetNamedQueryCommandOutput | BatchGetPreparedStatementCommandOutput | BatchGetQueryExecutionCommandOutput | CreateDataCatalogCommandOutput | CreateNamedQueryCommandOutput | CreatePreparedStatementCommandOutput | CreateWorkGroupCommandOutput | DeleteDataCatalogCommandOutput | DeleteNamedQueryCommandOutput | DeletePreparedStatementCommandOutput | DeleteWorkGroupCommandOutput | GetDataCatalogCommandOutput | GetDatabaseCommandOutput | GetNamedQueryCommandOutput | GetPreparedStatementCommandOutput | GetQueryExecutionCommandOutput | GetQueryResultsCommandOutput | GetQueryRuntimeStatisticsCommandOutput | GetTableMetadataCommandOutput | GetWorkGroupCommandOutput | ListDataCatalogsCommandOutput | ListDatabasesCommandOutput | ListEngineVersionsCommandOutput | ListNamedQueriesCommandOutput | ListPreparedStatementsCommandOutput | ListQueryExecutionsCommandOutput | ListTableMetadataCommandOutput | ListTagsForResourceCommandOutput | ListWorkGroupsCommandOutput | StartQueryExecutionCommandOutput | StopQueryExecutionCommandOutput | TagResourceCommandOutput | UntagResourceCommandOutput | UpdateDataCatalogCommandOutput | UpdateNamedQueryCommandOutput | UpdatePreparedStatementCommandOutput | UpdateWorkGroupCommandOutput;
export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
    
    requestHandler?: __HttpHandler;
    
    sha256?: __HashConstructor;
    
    urlParser?: __UrlParser;
    
    bodyLengthChecker?: __BodyLengthCalculator;
    
    streamCollector?: __StreamCollector;
    
    base64Decoder?: __Decoder;
    
    base64Encoder?: __Encoder;
    
    utf8Decoder?: __Decoder;
    
    utf8Encoder?: __Encoder;
    
    runtime?: string;
    
    disableHostPrefix?: boolean;
    
    maxAttempts?: number | __Provider<number>;
    
    retryMode?: string | __Provider<string>;
    
    logger?: __Logger;
    
    useDualstackEndpoint?: boolean | __Provider<boolean>;
    
    useFipsEndpoint?: boolean | __Provider<boolean>;
    
    serviceId?: string;
    
    region?: string | __Provider<string>;
    
    credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
    
    regionInfoProvider?: RegionInfoProvider;
    
    defaultUserAgentProvider?: Provider<__UserAgent>;
    
    defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
}
declare type AthenaClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;

export interface AthenaClientConfig extends AthenaClientConfigType {
}
declare type AthenaClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;

export interface AthenaClientResolvedConfig extends AthenaClientResolvedConfigType {
}

export declare class AthenaClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, AthenaClientResolvedConfig> {
    
    readonly config: AthenaClientResolvedConfig;
    constructor(configuration: AthenaClientConfig);
    
    destroy(): void;
}
export {};
