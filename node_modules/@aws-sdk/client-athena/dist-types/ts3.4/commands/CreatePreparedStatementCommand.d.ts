import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { AthenaClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../AthenaClient";
import { CreatePreparedStatementInput, CreatePreparedStatementOutput } from "../models/models_0";
export interface CreatePreparedStatementCommandInput extends CreatePreparedStatementInput {
}
export interface CreatePreparedStatementCommandOutput extends CreatePreparedStatementOutput, __MetadataBearer {
}

export declare class CreatePreparedStatementCommand extends $Command<CreatePreparedStatementCommandInput, CreatePreparedStatementCommandOutput, AthenaClientResolvedConfig> {
    readonly input: CreatePreparedStatementCommandInput;
    constructor(input: CreatePreparedStatementCommandInput);
    
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AthenaClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreatePreparedStatementCommandInput, CreatePreparedStatementCommandOutput>;
    private serialize;
    private deserialize;
}
